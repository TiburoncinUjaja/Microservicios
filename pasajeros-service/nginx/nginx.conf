events {
    worker_connections 1024;
}

http {
    upstream pasajeros_backend {
        least_conn;  # Balanceo de carga por conexiones activas
        server pasajeros-service:8000 max_fails=3 fail_timeout=30s;
        server pasajeros-service:8000 max_fails=3 fail_timeout=30s;
        server pasajeros-service:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Configuración de rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=60r/m;

    server {
        listen 80;
        server_name localhost;

        # Configuración de logs
        access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
        error_log /var/log/nginx/error.log warn;

        # Configuración de timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Configuración de buffers
        proxy_buffer_size 4k;
        proxy_buffers 4 32k;
        proxy_busy_buffers_size 64k;

        # Headers de seguridad
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Health check endpoint
        location /health {
            proxy_pass http://pasajeros_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No aplicar rate limiting a health checks
            limit_req off;
        }

        # API endpoints
        location /api/ {
            proxy_pass http://pasajeros_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Rate limiting
            limit_req zone=api_limit burst=20 nodelay;

            # Circuit breaker
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
        }

        # Métricas de Prometheus
        location /metrics {
            proxy_pass http://pasajeros_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No aplicar rate limiting a métricas
            limit_req off;
        }

        # Manejo de errores
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
} 